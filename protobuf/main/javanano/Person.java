// Generated by the protocol buffer compiler.  DO NOT EDIT!

@SuppressWarnings("hiding")
public final class Person extends
    com.google.protobuf.nano.MessageNano {

  private static volatile Person[] _emptyArray;
  public static Person[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new Person[0];
        }
      }
    }
    return _emptyArray;
  }

  // required string name = 1;
  public java.lang.String name;

  // required int32 id = 2;
  public int id;

  // optional string email = 3;
  public java.lang.String email;

  public Person() {
    clear();
  }

  public Person clear() {
    name = "";
    id = 0;
    email = "";
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    output.writeString(1, this.name);
    output.writeInt32(2, this.id);
    if (!this.email.equals("")) {
      output.writeString(3, this.email);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeStringSize(1, this.name);
    size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(2, this.id);
    if (!this.email.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.email);
    }
    return size;
  }

  @Override
  public Person mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 10: {
          this.name = input.readString();
          break;
        }
        case 16: {
          this.id = input.readInt32();
          break;
        }
        case 26: {
          this.email = input.readString();
          break;
        }
      }
    }
  }

  public static Person parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new Person(), data);
  }

  public static Person parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new Person().mergeFrom(input);
  }
}
